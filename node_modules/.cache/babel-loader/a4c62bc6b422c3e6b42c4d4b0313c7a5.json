{"ast":null,"code":"var _jsxFileName = \"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/front-integral-desafio-m03/src/components/Modal/index.js\",\n    _s = $RefreshSig$();\n\nimport './style.css';\nimport '../../css/layout.css';\nimport '../../css/spacing.css';\nimport InputMask from 'react-input-mask';\nimport { useState, useEffect, useRef } from 'react';\nimport { getDay, format, parse } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modal({\n  setShowModal\n}) {\n  _s();\n\n  const [value, setValue] = useState('');\n  const [category, setCategory] = useState('');\n  const [date, setDate] = useState('');\n  const [description, setDescription] = useState('');\n  const [credit, setCredit] = useState(false);\n  const [debit, setDebit] = useState(true);\n\n  async function handleSubmit() {\n    if (!value || !category) {\n      alert('Preencha os campos obrigatÃ³rios.');\n    }\n\n    try {\n      const body = {\n        date,\n        week_day: getDay(date),\n        description,\n        value,\n        category,\n        type: credit ? 'credit' : 'debit'\n      };\n      const response = await fetch('http://localhost:3333/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"modal-title\",\n        children: \"Adicionar Registro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"close-icon\",\n        src: \"close.svg\",\n        alt: \"close\",\n        onClick: () => setShowModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-row mt-5 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"credit-button\",\n          className: credit ? 'button credit-button' : 'button inactive-credit-button',\n          onClick: () => {\n            setCredit(!credit);\n            setDebit(!debit);\n          },\n          children: \"Entrada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"debit-button\",\n          className: debit ? 'debit-button button' : 'inactive-debit-button button',\n          onClick: () => {\n            setCredit(!credit);\n            setDebit(!debit);\n          },\n          children: \"Sa\\xEDda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Valor\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"value\",\n          className: \"modal-input mb-2 mt-1\",\n          onChange: e => setValue(Number(e.target.value)),\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Categoria\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"category\",\n          className: \"modal-input mb-2 mt-1\",\n          onChange: e => setCategory(e.target.value),\n          value: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Data\", /*#__PURE__*/_jsxDEV(InputMask, {\n          mask: \"99/99/9999\",\n          name: \"date\",\n          className: \"modal-input mb-2 mt-1\",\n          onChange: e => setDate(parse(e.target.value, 'yyyy-MM-dd', new Date())),\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Descri\\xE7\\xE3o\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"modal-input mb-2 mt-1\",\n          onChange: e => setDescription(e.target.value),\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-insert\",\n        onClick: () => handleSubmit(),\n        children: \"Confirmar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Modal, \"YpdQRiQS2Tog+STI3hz/Z+XXumw=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/front-integral-desafio-m03/src/components/Modal/index.js"],"names":["InputMask","useState","useEffect","useRef","getDay","format","parse","Modal","setShowModal","value","setValue","category","setCategory","date","setDate","description","setDescription","credit","setCredit","debit","setDebit","handleSubmit","alert","body","week_day","type","response","fetch","method","headers","JSON","stringify","data","json","console","log","error","e","Number","target","Date"],"mappings":"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","sourcesContent":["import './style.css'\nimport '../../css/layout.css'\nimport '../../css/spacing.css'\n\nimport InputMask from 'react-input-mask'\n\nimport { useState, useEffect, useRef } from 'react'\nimport { getDay, format, parse } from 'date-fns'\n\nfunction Modal({ setShowModal }) {\n  const [value, setValue] = useState('')\n  const [category, setCategory] = useState('')\n  const [date, setDate] = useState('')\n  const [description, setDescription] = useState('')\n  const [credit, setCredit] = useState(false)\n  const [debit, setDebit] = useState(true)\n\n  async function handleSubmit() {\n    if (!value || !category) {\n      alert('Preencha os campos obrigatÃ³rios.')\n    }\n    try {\n      const body = {\n        date,\n        week_day: getDay(date),\n        description,\n        value,\n        category,\n        type: credit ? 'credit' : 'debit',\n      }\n\n      const response = await fetch('http://localhost:3333/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      })\n\n      const data = await response.json()\n      console.log(data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-container\">\n        <h1 className=\"modal-title\">Adicionar Registro</h1>\n        <img\n          className=\"close-icon\"\n          src=\"close.svg\"\n          alt=\"close\"\n          onClick={() => setShowModal(false)}\n        ></img>\n        <div className=\"flex-row mt-5 mb-3\">\n          <button\n            id=\"credit-button\"\n            className={\n              credit ? 'button credit-button' : 'button inactive-credit-button'\n            }\n            onClick={() => {\n              setCredit(!credit)\n              setDebit(!debit)\n            }}\n          >\n            Entrada\n          </button>\n          <button\n            id=\"debit-button\"\n            className={\n              debit ? 'debit-button button' : 'inactive-debit-button button'\n            }\n            onClick={() => {\n              setCredit(!credit)\n              setDebit(!debit)\n            }}\n          >\n            SaÃ­da\n          </button>\n        </div>\n        <label>\n          Valor\n          <input\n            name=\"value\"\n            className=\"modal-input mb-2 mt-1\"\n            onChange={(e) => setValue(Number(e.target.value))}\n            value={value}\n          />\n        </label>\n        <label>\n          Categoria\n          <input\n            name=\"category\"\n            className=\"modal-input mb-2 mt-1\"\n            onChange={(e) => setCategory(e.target.value)}\n            value={category}\n          />\n        </label>\n        <label>\n          Data\n          <InputMask\n            mask=\"99/99/9999\"\n            name=\"date\"\n            className=\"modal-input mb-2 mt-1\"\n            onChange={(e) => setDate(parse(e.target.value, 'yyyy-MM-dd', new Date()))}\n            value={date}\n          />\n        </label>\n        <label>\n          DescriÃ§Ã£o\n          <input\n            className=\"modal-input mb-2 mt-1\"\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n          />\n        </label>\n        <button className=\"btn-insert\" onClick={() => handleSubmit()}>\n          Confirmar\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n"]},"metadata":{},"sourceType":"module"}