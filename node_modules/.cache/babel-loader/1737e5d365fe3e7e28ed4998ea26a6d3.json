{"ast":null,"code":"var _jsxFileName = \"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/front-integral-desafio-m03/src/components/Modal/index.js\";\nimport './style.css';\nimport '../../css/layout.css';\nimport '../../css/spacing.css';\nimport InputMask from 'react-input-mask';\nimport { useState } from 'react';\nimport { getDay } from 'date-fns';\nimport { useEffect } from 'react/cjs/react.development';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modal({\n  setShowModal,\n  loadTransactions,\n  transacInEditing,\n  value,\n  setValue,\n  category,\n  setCategory,\n  date,\n  setDate,\n  description,\n  setDescription,\n  credit,\n  setCredit,\n  debit,\n  setDebit,\n  showModal,\n  setTransacInEditing\n}) {\n  async function handleSubmit() {\n    if (!value || !category) {\n      alert('Preencha os campos obrigatórios.');\n      return;\n    }\n\n    function formataData(date) {\n      const arrayDate = date.split('/');\n      const day = arrayDate[0];\n      const month = arrayDate[1];\n      const year = arrayDate[2];\n      return new Date(year, month, day);\n    }\n\n    try {\n      const body = {\n        date: !date ? new Date() : formataData(date),\n        week_day: getDay(!date ? new Date() : formataData(date)),\n        description,\n        value,\n        category,\n        type: credit ? 'credit' : 'debit'\n      };\n      await fetch('http://localhost:3333/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      await loadTransactions();\n      setValue('');\n      setCategory('');\n      setDate('');\n      setDescription('');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleEdit() {\n    if (!value || !category) {\n      alert('Preencha os campos obrigatórios.');\n      return;\n    }\n\n    function formataData(date) {\n      const arrayDate = date.split('/');\n      const day = arrayDate[0];\n      const month = arrayDate[1];\n      const year = arrayDate[2];\n      return new Date(year, month, day);\n    }\n\n    try {\n      const body = {\n        date: !date ? new Date() : formataData(date),\n        week_day: getDay(!date ? new Date() : formataData(date)),\n        description,\n        value,\n        category,\n        type: credit ? 'credit' : 'debit'\n      };\n      await fetch(`http://localhost:3333/transactions/${transacInEditing.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      await loadTransactions();\n      setValue('');\n      setCategory('');\n      setDate('');\n      setDescription('');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function cleanModal() {\n    setTransacInEditing(false);\n    setValue('');\n    setCategory('');\n    setDate('');\n    setDescription('');\n    setDebit(true);\n    setShowModal(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"modal-title\",\n        children: [transacInEditing ? 'Editando' : 'Adicionar', \" Registro\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"close-icon\",\n        src: \"close.svg\",\n        alt: \"close\",\n        onClick: () => cleanModal()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-row mt-5 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"credit-button\",\n          className: credit ? 'button credit-button' : 'button inactive-credit-button',\n          onClick: () => {\n            setCredit(!credit);\n            setDebit(!debit);\n          },\n          children: \"Entrada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"debit-button\",\n          className: debit ? 'debit-button button' : 'inactive-debit-button button',\n          onClick: () => {\n            setCredit(!credit);\n            setDebit(!debit);\n          },\n          children: \"Sa\\xEDda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Valor\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"value\",\n          className: \"modal-input mb-2 mt-1\",\n          onChange: e => setValue(Number(e.target.value)),\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Categoria\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"category\",\n          className: \"modal-input mb-2 mt-1\",\n          onChange: e => setCategory(e.target.value),\n          value: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Data\", /*#__PURE__*/_jsxDEV(InputMask, {\n          mask: \"99/99/9999\",\n          name: \"date\",\n          className: \"modal-input mb-2 mt-1\",\n          alwaysShowMask: false,\n          onChange: e => {\n            setDate(e.target.value);\n          },\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Descri\\xE7\\xE3o\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"modal-input mb-2 mt-1\",\n          onChange: e => setDescription(e.target.value),\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-insert\",\n        onClick: () => transacInEditing ? handleEdit() : handleSubmit(),\n        children: \"Confirmar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/front-integral-desafio-m03/src/components/Modal/index.js"],"names":["InputMask","useState","getDay","useEffect","Modal","setShowModal","loadTransactions","transacInEditing","value","setValue","category","setCategory","date","setDate","description","setDescription","credit","setCredit","debit","setDebit","showModal","setTransacInEditing","handleSubmit","alert","formataData","arrayDate","split","day","month","year","Date","body","week_day","type","fetch","method","headers","JSON","stringify","error","console","log","handleEdit","id","cleanModal","e","Number","target"],"mappings":"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","sourcesContent":["import './style.css'\nimport '../../css/layout.css'\nimport '../../css/spacing.css'\n\nimport InputMask from 'react-input-mask'\n\nimport { useState } from 'react'\nimport { getDay } from 'date-fns'\nimport { useEffect } from 'react/cjs/react.development'\n\nfunction Modal({\n  setShowModal,\n  loadTransactions,\n  transacInEditing,\n  value,\n  setValue,\n  category,\n  setCategory,\n  date,\n  setDate,\n  description,\n  setDescription,\n  credit,\n  setCredit,\n  debit,\n  setDebit,\n  showModal,\n  setTransacInEditing,\n}) {\n  async function handleSubmit() {\n    if (!value || !category) {\n      alert('Preencha os campos obrigatórios.')\n      return\n    }\n\n    function formataData(date) {\n      const arrayDate = date.split('/')\n      const day = arrayDate[0]\n      const month = arrayDate[1]\n      const year = arrayDate[2]\n      return new Date(year, month, day)\n    }\n    try {\n      const body = {\n        date: !date ? new Date() : formataData(date),\n        week_day: getDay(!date ? new Date() : formataData(date)),\n        description,\n        value,\n        category,\n        type: credit ? 'credit' : 'debit',\n      }\n\n      await fetch('http://localhost:3333/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      })\n\n      await loadTransactions()\n      setValue('')\n      setCategory('')\n      setDate('')\n      setDescription('')\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  async function handleEdit() {\n    if (!value || !category) {\n      alert('Preencha os campos obrigatórios.')\n      return\n    }\n\n    function formataData(date) {\n      const arrayDate = date.split('/')\n      const day = arrayDate[0]\n      const month = arrayDate[1]\n      const year = arrayDate[2]\n      return new Date(year, month, day)\n    }\n    try {\n      const body = {\n        date: !date ? new Date() : formataData(date),\n        week_day: getDay(!date ? new Date() : formataData(date)),\n        description,\n        value,\n        category,\n        type: credit ? 'credit' : 'debit',\n      }\n\n      await fetch(`http://localhost:3333/transactions/${transacInEditing.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      })\n\n      await loadTransactions()\n      setValue('')\n      setCategory('')\n      setDate('')\n      setDescription('')\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  async function cleanModal() {\n    setTransacInEditing(false)\n    setValue('')\n    setCategory('')\n    setDate('')\n    setDescription('')\n    setDebit(true)\n    setShowModal(false)\n  }\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-container\">\n        <h1 className=\"modal-title\">\n          {transacInEditing ? 'Editando' : 'Adicionar'} Registro\n        </h1>\n        <img\n          className=\"close-icon\"\n          src=\"close.svg\"\n          alt=\"close\"\n          onClick={() => cleanModal()}\n        ></img>\n        <div className=\"flex-row mt-5 mb-3\">\n          <button\n            id=\"credit-button\"\n            className={\n              credit ? 'button credit-button' : 'button inactive-credit-button'\n            }\n            onClick={() => {\n              setCredit(!credit)\n              setDebit(!debit)\n            }}\n          >\n            Entrada\n          </button>\n          <button\n            id=\"debit-button\"\n            className={\n              debit ? 'debit-button button' : 'inactive-debit-button button'\n            }\n            onClick={() => {\n              setCredit(!credit)\n              setDebit(!debit)\n            }}\n          >\n            Saída\n          </button>\n        </div>\n        <label>\n          Valor\n          <input\n            name=\"value\"\n            className=\"modal-input mb-2 mt-1\"\n            onChange={(e) => setValue(Number(e.target.value))}\n            value={value}\n          />\n        </label>\n        <label>\n          Categoria\n          <input\n            name=\"category\"\n            className=\"modal-input mb-2 mt-1\"\n            onChange={(e) => setCategory(e.target.value)}\n            value={category}\n          />\n        </label>\n        <label>\n          Data\n          <InputMask\n            mask=\"99/99/9999\"\n            name=\"date\"\n            className=\"modal-input mb-2 mt-1\"\n            alwaysShowMask={false}\n            onChange={(e) => {\n              setDate(e.target.value)\n            }}\n            value={date}\n          />\n        </label>\n        <label>\n          Descrição\n          <input\n            className=\"modal-input mb-2 mt-1\"\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n          />\n        </label>\n        <button\n          className=\"btn-insert\"\n          onClick={() => (transacInEditing ? handleEdit() : handleSubmit())}\n        >\n          Confirmar\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n"]},"metadata":{},"sourceType":"module"}