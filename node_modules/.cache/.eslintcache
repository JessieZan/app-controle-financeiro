[{"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/index.js":"1","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/reportWebVitals.js":"2","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/App.js":"3","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Header/index.js":"4","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Table/index.js":"5","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Filter/index.js":"6","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Modal/index.js":"7","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/contexts/TasksListContext.js":"8","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/hooks/useTasksListProvider.js":"9","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/hooks/useTasksList.js":"10","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Resume/index.js":"11","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Table/Confirm.js":"12","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Table/Head.js":"13","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Table/Line.js":"14"},{"size":615,"mtime":1634568626878,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1633275444390,"results":"17","hashOfConfig":"16"},{"size":1522,"mtime":1634568515176,"results":"18","hashOfConfig":"16"},{"size":214,"mtime":1633383451725,"results":"19","hashOfConfig":"16"},{"size":2893,"mtime":1634566273339,"results":"20","hashOfConfig":"16"},{"size":5438,"mtime":1634515341664,"results":"21","hashOfConfig":"16"},{"size":5048,"mtime":1634505110847,"results":"22","hashOfConfig":"16"},{"size":401,"mtime":1634566382524,"results":"23","hashOfConfig":"16"},{"size":3010,"mtime":1634517904267,"results":"24","hashOfConfig":"16"},{"size":191,"mtime":1634567312551,"results":"25","hashOfConfig":"16"},{"size":862,"mtime":1634514244997,"results":"26","hashOfConfig":"16"},{"size":1080,"mtime":1634565983086,"results":"27","hashOfConfig":"16"},{"size":1260,"mtime":1634566022462,"results":"28","hashOfConfig":"16"},{"size":1770,"mtime":1634565952575,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oh51i8",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/index.js",[],"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/reportWebVitals.js",[],["63","64"],"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/App.js",["65"],"import './App.css'\nimport '../src/css/layout.css'\nimport '../src/css/spacing.css'\nimport Header from './components/Header'\nimport Filter from './components/Filter'\nimport Table from './components/Table'\nimport Modal from './components/Modal'\nimport Resume from './components/Resume'\n\nimport { TasksListProvider } from '../src/contexts/TasksListContext'\n\nimport useTasksList from '../src/hooks/useTasksList'\nimport { useState } from 'react'\n\nfunction App() {\n  const [showFiltro, setShowFiltro] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n\n  return (\n    <div className=\"App\">\n      <TasksListProvider>\n        {showModal && (\n          <Modal showModal={showModal} setShowModal={setShowModal} />\n        )}\n        <Header />\n        <div className=\"container\">\n          <button\n            className=\"open-filters-button\"\n            onClick={() => setShowFiltro(!showFiltro)}\n          >\n            <img src=\"./filtro.svg\" alt=\"Logo\" width=\"25\" />\n            Filtrar\n          </button>\n          <div className=\"flex-row\">\n            <div className=\"flex-column\">\n              {showFiltro && (\n                <Filter showFiltro={showFiltro} setShowFiltro={setShowFiltro} />\n              )}\n\n              {<Table />}\n            </div>\n            <Resume />\n            <button className=\"btn-add\" onClick={() => setShowModal(true)}>\n              Adicionar Registro\n            </button>\n          </div>\n        </div>\n      </TasksListProvider>\n    </div>\n  )\n}\n\nexport default App\n","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Header/index.js",[],"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Table/index.js",["66","67","68","69"],"import './style.css'\nimport '../../css/layout.css'\nimport '../../css/spacing.css'\n\nimport useTasksList from '../../hooks/useTasksList'\n\nimport { useState } from 'react'\nimport { format } from 'date-fns'\nimport { useEffect } from 'react'\n\nimport Line from './Line'\nimport Head from './Head'\n\nfunction Table() {\n  const {\n    transactions,\n    setTransactions,\n    setShowModal,\n    transacInEditing,\n    setValue,\n    setCategory,\n    setDate,\n    setDescription,\n    setCredit,\n    setDebit,\n    showModal,\n  } = useTasksList()\n\n  const [ordenaData, setOrdenaData] = useState(false)\n  const [ordenaWeekDay, setOrdenaWeekDay] = useState(false)\n  const [ordenaValue, setOrdenaValue] = useState(false)\n\n  useEffect(() => {\n    handleReverseDate()\n    setOrdenaWeekDay(false)\n    setOrdenaValue(false)\n  }, [ordenaData])\n\n  useEffect(() => {\n    handleReverseWeekDay()\n    setOrdenaData(false)\n    setOrdenaValue(false)\n  }, [ordenaWeekDay])\n\n  useEffect(() => {\n    handleReverseValue()\n    setOrdenaData(false)\n    setOrdenaWeekDay(false)\n  }, [ordenaValue])\n\n  function handleReverseDate() {\n    if (ordenaData) {\n      setTransactions(\n        transactions.sort((x, y) => {\n          let a = new Date(x.date)\n          let b = new Date(y.date)\n          return a - b\n        }),\n      )\n    } else {\n      setTransactions(transactions.reverse())\n    }\n  }\n\n  function handleReverseWeekDay() {\n    if (ordenaWeekDay) {\n      setTransactions(\n        transactions.sort((x, y) => {\n          let a = x.week_day\n          let b = y.week_day\n          return a - b\n        }),\n      )\n    } else {\n      setTransactions(transactions.reverse())\n    }\n  }\n\n  function handleReverseValue() {\n    if (ordenaValue) {\n      setTransactions(\n        transactions.sort((x, y) => {\n          let a = x.value\n          let b = y.value\n          return a - b\n        }),\n      )\n    } else {\n      setTransactions(transactions.reverse())\n    }\n  }\n  useEffect(() => {\n    if (transacInEditing) {\n      setShowModal(!showModal)\n      setValue(transacInEditing.value)\n      setCategory(transacInEditing.category)\n      setDate(format(new Date(transacInEditing.date), 'dd/MM/yyyy'))\n      setDescription(transacInEditing.description)\n      if (transacInEditing.type === 'credit') {\n        setCredit(true)\n        setDebit(false)\n      } else {\n        setCredit(false)\n        setDebit(true)\n      }\n    }\n  }, [transacInEditing])\n  return (\n    <div className=\"table mt-5\">\n      <Head\n        ordenaData={ordenaData}\n        setOrdenaData={setOrdenaData}\n        ordenaWeekDay={ordenaWeekDay}\n        setOrdenaWeekDay={setOrdenaWeekDay}\n        ordenaValue={ordenaValue}\n        setOrdenaValue={setOrdenaValue}\n      />\n      <div className=\"table-body\">\n        {transactions.map((transaction) => (\n          <Line transaction={transaction} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Table\n","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Filter/index.js",["70","71"],"import './style.css'\nimport '../../css/layout.css'\nimport '../../css/spacing.css'\n\nimport useTasksList from '../../hooks/useTasksList'\n\nimport { useState, useEffect } from 'react'\n\nfunction Button() {\n  const {\n    filtroLimpo,\n    lista,\n    title,\n    item,\n    filterStatus,\n    setFilterStatus,\n  } = useTasksList()\n  const [active, setActive] = useState(filtroLimpo)\n\n  useEffect(() => {\n    setActive(filtroLimpo)\n  }, [filtroLimpo])\n\n  function handleAddFilters(item) {\n    setActive(!active)\n    if (title === 'Dia da Semana')\n      if (!filterStatus.week_days.includes(item)) {\n        setFilterStatus({\n          week_days: [...filterStatus.week_days, item],\n          categories: [...filterStatus.categories],\n          max_value: filterStatus.max_value,\n          min_value: filterStatus.min_value,\n        })\n        console.log(filterStatus.week_days)\n      } else {\n        const newWeekDays = filterStatus.week_days.filter(\n          (weekDay) => weekDay !== item,\n        )\n        setFilterStatus({ ...filterStatus, week_days: newWeekDays })\n      }\n\n    if (title === 'Categoria')\n      if (!filterStatus.categories.includes(item)) {\n        setFilterStatus({\n          week_days: [...filterStatus.week_days],\n          categories: [...filterStatus.categories, item],\n          max_value: filterStatus.max_value,\n          min_value: filterStatus.min_value,\n        })\n      } else {\n        const newCategories = filterStatus.categories.filter(\n          (category) => category !== item,\n        )\n        setFilterStatus({ ...filterStatus, categories: newCategories })\n      }\n    console.log(filterStatus)\n  }\n\n  return (\n    <button\n      className={`container-chip ${active && 'container-chip-active'}`}\n      onClick={() =>\n        title === 'Dia da Semana'\n          ? handleAddFilters(lista.indexOf(item))\n          : handleAddFilters(item)\n      }\n      id={lista.indexOf(item)}\n    >\n      {item}{' '}\n      <img\n        src={active ? './active.svg' : './inactive.svg'}\n        alt=\"adicionar\"\n        width={active ? 15 : 10}\n      />\n    </button>\n  )\n}\n\nfunction Filters() {\n  const { title, lista } = useTasksList()\n  return (\n    <div className=\"filter-containers\">\n      <h1 className=\"filter-title\">{title}</h1>\n      {lista.map((item) => {\n        return <Button item={item} />\n      })}\n    </div>\n  )\n}\n\nfunction Filter({ showFiltro, setShowFiltro }) {\n  const {\n    loadDebits,\n    loadCredits,\n    diasDaSemana,\n    categorias,\n    transactions,\n    setTransactions,\n  } = useTasksList()\n  const [max, setMax] = useState(0)\n  const [min, setMin] = useState(0)\n\n  const [noFilterTransactions, setNoFilterTransactions] = useState([\n    ...transactions,\n  ])\n  const [filterStatus, setFilterStatus] = useState({\n    week_days: [],\n    categories: [],\n    max_value: 0,\n    min_value: 0,\n  })\n\n  useEffect(() => {\n    setFilterStatus({\n      ...filterStatus,\n      max_value: max,\n      min_value: min,\n    })\n  }, [min, max])\n\n  function handleApplyFilters() {\n    let transactionsFiltered = [...noFilterTransactions]\n\n    if (filterStatus.week_days.length > 0) {\n      transactionsFiltered = transactionsFiltered.filter((transaction) =>\n        filterStatus.week_days.includes(transaction.week_day),\n      )\n    }\n\n    if (filterStatus.categories.length > 0) {\n      transactionsFiltered = transactionsFiltered.filter((transaction) =>\n        filterStatus.categories.includes(transaction.category),\n      )\n    }\n    console.log(transactionsFiltered)\n    console.log(filterStatus.categories)\n\n    if (max > 0) {\n      transactionsFiltered = transactionsFiltered.filter(\n        (transaction) => Number(max) >= Number(transaction.value),\n      )\n    }\n    console.log(transactionsFiltered)\n    if (min > 0) {\n      transactionsFiltered = transactionsFiltered.filter(\n        (transaction) => Number(min) <= Number(transaction.value),\n      )\n    }\n    console.log(transactionsFiltered)\n    setTransactions(transactionsFiltered)\n    loadDebits(transactionsFiltered)\n    loadCredits(transactionsFiltered)\n  }\n\n  function handleLimparFiltro() {\n    setTransactions(noFilterTransactions)\n    loadDebits(noFilterTransactions)\n    loadCredits(noFilterTransactions)\n    setShowFiltro(false)\n  }\n\n  return (\n    <div className=\"container-filters flex-grow3\">\n      <Filters title=\"Dia da Semana\" lista={diasDaSemana} />\n      <Filters title=\"Categoria\" lista={categorias} />\n      <div className=\"flex-column justify-center pl-3\">\n        <h1 className=\"filter-title\">Valor</h1>\n        <label className=\"filter-label flex-column mb-2\">\n          Min\n          <input\n            id=\"min-value\"\n            type=\"text\"\n            className=\"filter-input\"\n            value={min}\n            onChange={(e) => setMin(e.target.value)}\n          />\n        </label>\n        <label className=\"filter-label flex-column\">\n          Max\n          <input\n            id=\"max-value\"\n            type=\"text\"\n            className=\"filter-input\"\n            value={max}\n            onChange={(e) => setMax(e.target.value)}\n          />\n        </label>\n        <button\n          className=\"btn-clear-filters\"\n          onClick={() => handleLimparFiltro()}\n        >\n          Limpar Filtros\n        </button>\n        <button\n          className=\"btn-apply-filters\"\n          onClick={() => handleApplyFilters()}\n        >\n          Aplicar Filtros\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter\n","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Modal/index.js",[],"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/contexts/TasksListContext.js",[],"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/hooks/useTasksListProvider.js",["72","73"],"import { useState, useEffect } from 'react'\n\nfunction useTasksListProvider() {\n  const [transactions, setTransactions] = useState([])\n  const [transactionsOriginal, settransactionsOriginal] = useState([])\n  const [transacInEditing, setTransacInEditing] = useState(false)\n  const [value, setValue] = useState('')\n  const [category, setCategory] = useState('')\n  const [date, setDate] = useState('')\n  const [description, setDescription] = useState('')\n  const [credit, setCredit] = useState(false)\n  const [debit, setDebit] = useState(true)\n\n  const [credits, setCredits] = useState([])\n  const [debits, setDebits] = useState([])\n\n  const [totalCredits, setTotalCredits] = useState(0)\n  const [totalDebits, setTotalDebits] = useState(0)\n\n  const [balance, setBalance] = useState(0)\n\n  const [categorias, setCategorias] = useState([])\n\n  const [diasDaSemana, setDiasDaSemana] = useState([\n    'Domingo',\n    'Segunda',\n    'Terça',\n    'Quarta',\n    'Quinta',\n    'Sexta',\n    'Sábado',\n  ])\n\n  useEffect(() => {\n    loadTransactions()\n  }, [])\n\n  useEffect(() => {\n    setTotalCredits(credits.reduce((total, item) => total + item.value, 0))\n    setTotalDebits(debits.reduce((total, item) => total + item.value, 0))\n    setBalance(totalCredits - totalDebits)\n  }, [credits, debits])\n\n  useEffect(() => {\n    setBalance(totalCredits - totalDebits)\n  }, [totalCredits, totalDebits])\n\n  async function loadCategories(transactions) {\n    const newCategories = transactions.map(\n      (transaction) => transaction.category,\n    )\n    const uniqueCategories = [...new Set(newCategories)]\n    setCategorias(uniqueCategories)\n  }\n\n  async function loadCredits(transactions) {\n    setCredits(\n      transactions.filter((transaction) => transaction.type === 'credit'),\n    )\n  }\n\n  async function loadDebits(transactions) {\n    setDebits(\n      transactions.filter((transaction) => transaction.type === 'debit'),\n    )\n  }\n\n  async function loadTransactions() {\n    try {\n      const response = await fetch('http://localhost:3333/transactions', {\n        method: 'GET',\n      })\n      const data = await response.json()\n      setTransactions(data)\n      settransactionsOriginal(data)\n      loadCredits(data)\n      loadDebits(data)\n      loadCategories(data)\n      console.log(data)\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n  return {\n    transactions,\n    setTransactions,\n    transactionsOriginal,\n    settransactionsOriginal,\n    transacInEditing,\n    setTransacInEditing,\n    value,\n    setValue,\n    category,\n    setCategory,\n    date,\n    setDate,\n    description,\n    setDescription,\n    credit,\n    setCredit,\n    debit,\n    setDebit,\n    credits,\n    setCredits,\n    debits,\n    setDebits,\n    totalCredits,\n    setTotalCredits,\n    totalDebits,\n    setTotalDebits,\n    balance,\n    setBalance,\n    categorias,\n    setCategorias,\n    diasDaSemana,\n    setDiasDaSemana,\n    loadCategories,\n    loadCredits,\n    loadDebits,\n    loadTransactions,\n  }\n}\n\nexport default useTasksListProvider\n","/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/hooks/useTasksList.js",[],"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Resume/index.js",[],"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Table/Confirm.js",[],"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Table/Head.js",[],"/home/jessiezan/Desktop/CubosAcademy+Ifood/Desafio-Front-m3/app-controle-financeiro/src/components/Table/Line.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":12,"column":8,"nodeType":"80","messageId":"81","endLine":12,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":37,"column":6,"nodeType":"84","endLine":37,"endColumn":18,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":43,"column":6,"nodeType":"84","endLine":43,"endColumn":21,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":49,"column":6,"nodeType":"84","endLine":49,"endColumn":19,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"90","line":107,"column":6,"nodeType":"84","endLine":107,"endColumn":24,"suggestions":"91"},{"ruleId":"78","severity":1,"message":"92","line":103,"column":32,"nodeType":"80","messageId":"81","endLine":103,"endColumn":55},{"ruleId":"82","severity":1,"message":"93","line":119,"column":6,"nodeType":"84","endLine":119,"endColumn":16,"suggestions":"94"},{"ruleId":"82","severity":1,"message":"95","line":36,"column":6,"nodeType":"84","endLine":36,"endColumn":8,"suggestions":"96"},{"ruleId":"82","severity":1,"message":"97","line":42,"column":6,"nodeType":"84","endLine":42,"endColumn":23,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'useTasksList' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleReverseDate'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'handleReverseWeekDay'. Either include it or remove the dependency array.",["102"],"React Hook useEffect has a missing dependency: 'handleReverseValue'. Either include it or remove the dependency array.",["103"],"React Hook useEffect has missing dependencies: 'setCategory', 'setCredit', 'setDate', 'setDebit', 'setDescription', 'setShowModal', 'setValue', and 'showModal'. Either include them or remove the dependency array.",["104"],"'setNoFilterTransactions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filterStatus'. Either include it or remove the dependency array. You can also do a functional update 'setFilterStatus(f => ...)' if you only need 'filterStatus' in the 'setFilterStatus' call.",["105"],"React Hook useEffect has a missing dependency: 'loadTransactions'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has missing dependencies: 'totalCredits' and 'totalDebits'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBalance' needs the current value of 'totalCredits'.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [handleReverseDate, ordenaData]",{"range":"122","text":"123"},"Update the dependencies array to be: [handleReverseWeekDay, ordenaWeekDay]",{"range":"124","text":"125"},"Update the dependencies array to be: [handleReverseValue, ordenaValue]",{"range":"126","text":"127"},"Update the dependencies array to be: [setCategory, setCredit, setDate, setDebit, setDescription, setShowModal, setValue, showModal, transacInEditing]",{"range":"128","text":"129"},"Update the dependencies array to be: [min, max, filterStatus]",{"range":"130","text":"131"},"Update the dependencies array to be: [loadTransactions]",{"range":"132","text":"133"},"Update the dependencies array to be: [credits, debits, totalCredits, totalDebits]",{"range":"134","text":"135"},[803,815],"[handleReverseDate, ordenaData]",[921,936],"[handleReverseWeekDay, ordenaWeekDay]",[1042,1055],"[handleReverseValue, ordenaValue]",[2393,2411],"[setCategory, setCredit, setDate, setDebit, setDescription, setShowModal, setValue, showModal, transacInEditing]",[2952,2962],"[min, max, filterStatus]",[1039,1041],"[loadTransactions]",[1262,1279],"[credits, debits, totalCredits, totalDebits]"]